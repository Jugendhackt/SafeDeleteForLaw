/*
 * This file was generated by the Gradle 'init' task.
 *
 * This generated file contains a sample Java Library project to get you started.
 * For more details take a look at the Java Libraries chapter in the Gradle
 * user guide available at https://docs.gradle.org/5.0/userguide/java_library_plugin.html
 */
//apply plugin: 'java'
buildscript {
    dependencies {
        classpath group: 'de.dynamicfiles.projects.gradle.plugins', name: 'javafx-gradle-plugin', version: '8.8.2'
    }

    repositories {
        mavenLocal()
        mavenCentral()
    }
}
apply plugin: 'java'

repositories {
    mavenLocal()
    mavenCentral()
    jcenter()
}
    // Apply the java-library plugin to add support for Java Library
 //   id 'java-library'
   // id 'javafx-gradle-plugin'
version = '1.0'
dependencies {
    // This dependency is exported to consumers, that is to say found on their compile classpath.
   // api 'org.apache.commons:commons-math3:3.6.1'

    // This dependency is used internally, and not exposed to consumers on their own compile classpath.
    implementation 'com.google.guava:guava:26.0-jre'
    implementation 'com.fasterxml.jackson.core:jackson-databind:+'

    // Use JUnit test framework
    testImplementation 'junit:junit:4.12'
}
apply plugin: 'javafx-gradle-plugin'


jfx {
    verbose=true
    // minimal requirement for jfxJar-task
    mainClass = 'frontend.FrontendApplication'
  //  jfxAppOutputDir = "build/jfx/app"
    jfxMainAppJarName = "project-jfx.jar"
    // minimal requirement for jfxNative-task
    vendor = 'YourName'
}
//create a single Jar with all dependencies
task fatJar(type: Jar) {
    manifest {
        attributes 'Implementation-Title': 'Gradle Jar File Example',
                'Implementation-Version': version,
                'Main-Class': 'frontend.FrontendApplication'
    }
    baseName = project.name + '-all'
    from { configurations.compile.collect { it.isDirectory() ? it : zipTree(it) } }
    with jar
}